[package]
name = "tutorial9_models"
version = "0.1.0"
edition = "2021"

[lib]
# we want to allow our crate to build a native Rust static library and a C/C++ compatible library
crate-type = ["cdylib", "rlib"] 

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
winit = { workspace = true }
env_logger = { workspace = true }
log = { workspace = true }
wgpu = { workspace = true }
cfg-if = { workspace = true }
pollster = { workspace = true }
bytemuck = { workspace = true }
anyhow = { workspace = true }
cgmath = { workspace = true }
tobj = { workspace = true }

[build-dependencies]
anyhow = "1.0"
fs_extra = "1.2"
glob = "0.3"

# note: decoding jpegs in WASM isn't very performant
# if want to speed up image loading, consider using browser built-in decoders instead of image when using wasm-bindgen (involves creating <img> tag in Rust)

[dependencies.image]
version = "0.24"
default-features = false
features = [ "png", "jpeg" ]

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
console_log = "1.0"
wgpu = { version = "0.17", features = ["webgl"]}
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = [
    "Document",
    "Window",
    "Element",
    "Location",
]}
reqwest = { version = "0.11" }